---
NoTitle:
---

@{
    IEnumerable<PostData> catchedPokemon = Context.GetPosts();
}

<div class="page-title">
    <div class="page-title__text">Table de capture</div>
    <div class="page-title__subtitle">Cible potentielle : <span id="nextTarget"></span></div>
</div>

@foreach (Groups group in new[] { Groups.Generation1, Groups.Generation2, Groups.Generation3, Groups.Generation4, Groups.Generation5, Groups.Generation6, Groups.Generation7, Groups.Generation8, Groups.Generation9, Groups.Alola, Groups.Galar, Groups.Hisui, Groups.Paldea })
{
    IEnumerable<Pokemon> pokemons = Pokemon.GetAll(group);
    var percent = pokemons.Count(x => catchedPokemon.Any(p => p.Number == x.Number)) * 100.0 / pokemons.Count();

    <h1>@group.GetDescription() (@pokemons.Count(x => catchedPokemon.Any(p => p.Number == x.Number))/@pokemons.Count() - @string.Format("{0:0.0}%", percent))</h1>
    <div class="container">
        @foreach (Pokemon pokemon in pokemons)
        {
            var icon = Context.GetLink($"/assets/img/icons/{pokemon.PaddedNumber}.png");
            var post = catchedPokemon.OrderBy(p => p.CatchDate).FirstOrDefault(p => p.Number == pokemon.Number);
            var count = catchedPokemon.Count(p => p.Number == pokemon.Number);
            if (post != null)
            {
                <a title="@pokemon.Name" href="@Context.GetLink("/")@post.WritePath" style="position: relative">
                    <img class="pokemon-icon" src="@icon" loading="lazy" alt="Image of captured shiny @pokemon.Name" />

                    @if (count > 1)
                    {
                        <div class="badge-number">@count</div>
                    }
                </a>
            }
            else
            {
                <div style="position: relative" class="with-tooltip">
                    <img class="pokemon-icon not-catched" src="@icon" title="@pokemon.Name" loading="lazy" alt="Image of shiny @pokemon.Name" />

                    @if (pokemon.Groups.HasFlag(Groups.Locked))
                    {
                        <div class="badge-number">❌</div>
                    }

                    @{
                        string[] games = new string[] { "LGP", "LGE", "SW", "SH", "BD", "SP", "PLA", "SC", "VI" };
                    }                                 
                                                      
                    <div class="tooltip-wrapper">     
                        <div class="tooltip-content">
                            @foreach (var game in games)
                            {
                                <div style="position: relative">
                                    <img class="pokemon-icon @(pokemon.Games[game] == 0 ? "not-catched" : "")" src="@Context.GetLink($"/assets/img/games/{game}.png")" loading="lazy" alt="@game" />
                                    @if (pokemon.Games[game] == 2)
                                    {
                                        <div class="badge-number">✔️</div>
                                    }  
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function randomizeNextTarget() {
        @{
            var uncaught = Pokemon.GetAll().Where(x => !catchedPokemon.Select(y => y.Number).Contains(x.Number));
        }

                                                            var unchaughtNumbers = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Number}\"")))];
            var unchaughtNames = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Name}\"")))];
            var randomIndex = Math.floor(Math.random() * unchaughtNumbers.length);
            $("#nextTarget").html(unchaughtNumbers[randomIndex] + ' - ' + unchaughtNames[randomIndex]);
        }

        $(document).ready(function () {
            randomizeNextTarget();
        });
    </script>
}
