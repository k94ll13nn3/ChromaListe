---
NoTitle:
---

@{
    IEnumerable<PostData> catchedPokemon = Context.GetPosts();
}

<div class="page-title">
    <div class="page-title__text">Table de capture</div>
    <div class="page-title__subtitle">Cible potentielle : <span id="nextTarget"></span></div>
</div>

@foreach (Groups group in new[] { Groups.Generation1, Groups.Generation2, Groups.Generation3, Groups.Generation4, Groups.Generation5, Groups.Generation6, Groups.Generation7, Groups.Generation8, Groups.Generation9, Groups.Alola, Groups.Galar, Groups.Hisui, Groups.Paldea })
{
    IEnumerable<Pokemon> pokemons = Pokemon.GetAll(group);
    <h1>@group.GetDescription() (@pokemons.Count(x => catchedPokemon.Any(p => p.Number == x.Number))/@pokemons.Count())</h1>
    <div class="container">
        @foreach (Pokemon pokemon in pokemons)
        {
            var icon = Context.GetLink($"/assets/img/icons/{pokemon.PaddedNumber}.png");
            var post = catchedPokemon.FirstOrDefault(p => p.Number == pokemon.Number);
            var count = catchedPokemon.Count(p => p.Number == pokemon.Number);
            if (post != null)
            {
                <a title="@pokemon.Name" href="@Context.GetLink("/")@post.WritePath" style="position: relative">
                    <img class="pokemon-icon" src="@icon" loading="lazy" alt="Image of captured shiny @pokemon.Name" />

                    @if (count > 1)
                    {
                        <div class="badge-number">@count</div>
                    }
                </a>
            }
            else
            {
                <img class="pokemon-icon not-catched" src="@icon" title="@pokemon.Name" loading="lazy" alt="Image of shiny @pokemon.Name" />
            }
        }
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function randomizeNextTarget() {
        @{
            var uncaught = Pokemon.GetAll().Where(x => !catchedPokemon.Select(y => y.Number).Contains(x.Number));
        }

                    var unchaughtNumbers = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Number}\"")))];
            var unchaughtNames = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Name}\"")))];
            var randomIndex = Math.floor(Math.random() * unchaughtNumbers.length);
            $("#nextTarget").html(unchaughtNumbers[randomIndex] + ' - ' + unchaughtNames[randomIndex]);
        }

        $(document).ready(function () {
            randomizeNextTarget();
        });
    </script>
}
