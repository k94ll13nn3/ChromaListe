@{
    IList<PostData> caughtPokemon = Context.GetPosts();
}

<div id="pokemon-table"></div>

<style>
    .htAutocompleteArrow {
        display: none;
    }

    .wrapper {
        max-width: 1500px !important;
    }
</style>

@section Scripts {
    <script type="text/javascript">
        const container = document.querySelector("#pokemon-table");

        const data = [
            @foreach (var pokemon in caughtPokemon)
            {
                var currentPokemon = Pokemon.Get(pokemon.Number);
                                    @Html.Raw($"[ \"<a title='{@pokemon.Name}' href='{@Context.GetLink("/")}{@pokemon.WritePath}'>{@pokemon.Name}</a>\", \"{@pokemon.CaughtAs}\", \"{(@pokemon.ImageSuffix is null ? "Non" : "Oui")}\",\"{@pokemon.CatchDate:dd/MM/yyyy}\", \"{@pokemon.Location}\", \"{@pokemon.Level}\", \"{@pokemon.Version.GetDescription()}\", \"{@pokemon.Category.GetDescription()}\", \"{@pokemon.Ball.GetDescription()}\" ],\n")
            }
        ];

        const hot = new Handsontable(container, {
            data: data,
            layoutDirection: "ltr",
            language: "fr-FR",
            height: 600,
            width: "100%",
            stretchH: "all",
            readOnly: true,
            readOnlyCellClassName: "",
            themeName: "ht-theme-main-dark",
            colWidths: [130, 130, 75, 90, 150, 75, 160, 150, 75],
            colHeaders: [
                "Pokémon",
                "Attrapé",
                "Doub.",
                "Date",
                "Lieu",
                "Niv.",
                "Version",
                "Méthode",
                "Ball"
            ],
            columns: [
                { data: 0, renderer: "html" },
                { data: 1, type: "text" },
                {
                    data: 2,
                    type: 'checkbox',
                    checkedTemplate: 'Oui',
                    uncheckedTemplate: 'Non',
                },
                {
                    data: 3,
                    type: "date",
                    allowInvalid: false,
                    dateFormat: "DD/MM/YYYY",
                },
                { data: 4, type: "text" },
                {
                    data: 5,
                    type: "numeric",
                },
                { data: 6, type: "text" },
                { data: 7, type: "text" },
                { data: 8, type: "text" },
            ],
            dropdownMenu: {
                items: {
                    filter_by_condition: {
                        hidden() {
                            return this.getSelectedRangeLast().to.col >= 9;
                        },
                    },
                    filter_by_value: {
                        hidden() {
                            return this.getSelectedRangeLast().to.col >= 9;
                        },
                    },
                    filter_action_bar: {
                        hidden() {
                            return this.getSelectedRangeLast().to.col >= 9;
                        },
                    },
                },
            },
            afterGetColHeader(col, TH) {
                if (col >= 9) {
                    const button = TH.querySelector('.changeType');

                    if (!button) {
                        return;
                    }

                    button.parentElement.removeChild(button);
                }
            },
            filters: true,
            contextMenu: false,
            multiColumnSorting: {
                initialConfig: [
                    {
                        column: 3,
                        sortOrder: 'desc',
                    },
                ],
            },
            rowHeaders: true,
            manualRowMove: false,
            navigableHeaders: true,
            autoWrapCol: true,
            autoColumnSize: false,
            licenseKey: "non-commercial-and-evaluation",
        });

    </script>
}
