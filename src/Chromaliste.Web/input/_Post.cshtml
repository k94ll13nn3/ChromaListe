@{
	Layout = "/_Master.cshtml";
    
    var previousPost = Context.Outputs.FromPipeline("Posts")
        .OrderBy(x => x["PostFile"])
        .TakeWhile(x => x["PostFile"] != Model["PostFile"])
        .LastOrDefault();
    var lastPost = Context.Outputs.FromPipeline("Posts")
        .OrderByDescending(x => x["PostFile"])
        .TakeWhile(x => x["PostFile"] != Model["PostFile"])
        .LastOrDefault();
}

<h1 class="page-title post-title">
    <div class="page-title__text post-title__text">@Model["Title"]</div>
    <div class="page-title__subtitle post-title__subtitle">--- @($"{Model.Get<DateTime>("Date"):dd MMMM yyyy}") ---</div>
    <div class="page-title__subtitle post-title__subtitle">
        @if(previousPost != null)
        {
            <div style="float: left;"> 
                <a href="@Context.GetLink((string)previousPost["PostFile"])">&larr; @previousPost["Title"]</a>
            </div> 
        }
        @if(lastPost != null)
        {
            <div style="float: right;"> 
                <a href="@Context.GetLink((string)lastPost["PostFile"])">@lastPost["Title"] &rarr;</a>
            </div> 
        }
    </div>
</h1>

<div class="content">
    <p><img src="@Model["Image"]" alt="" height="250px" /></p>

    <ul>
        @{
            var caught = (string)Model.Get("Caught");
            var ball = (string)Model.Get("Ball");
        }
        @if(!string.IsNullOrWhiteSpace(caught) && caught != @Model["Title"].ToString())
        {
            <li>Attrapé : @caught</li>
        }
        <li>Numéro : @Model["Number"]</li>
        <li>@Model["Location"]</li>
        <li>Niveau : @Model["Level"]</li>
        <li>Version : @Model["Version"]</li>
        <li>Méthodes : @Model["Category"]</li>
        @if(!string.IsNullOrWhiteSpace(ball))
        {
            <li>Ball : <span id="icon__ball" class="pkspr pokeball-@ball custom-pkspr-ball"></span></li>
        }
    </ul>

    @RenderBody()
</div>

<script type="text/javascript">PkSpr.decorate('icon__ball');</script>