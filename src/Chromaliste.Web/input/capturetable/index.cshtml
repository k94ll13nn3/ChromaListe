---
NoTitle:
---

@{
    var catchedPokemon = Context.Outputs.FromPipeline(nameof(Posts)).Select(x => x.Get(CustomKeys.Number)).Distinct();
}

<h1 class="page-title">
    <div class="page-title__text">Table de capture</div>
    <div class="page-title__subtitle">Cible potentielle : <span id="nextTarget"></span></div>
</h1>

@foreach (Groups group in new[] { Groups.Generation1, Groups.Generation2, Groups.Generation3, Groups.Generation4, Groups.Generation5, Groups.Generation6, Groups.Generation7, Groups.Generation8, Groups.Alola, Groups.Galar })
{
    IEnumerable<Pokemon> pokemons = Pokemon.GetAll(group);
    <h1>@group.GetDescription() (@pokemons.Count(x => catchedPokemon.Contains($"{x?.Number ?? string.Empty}"))/@pokemons.Count())</h1>
    <div class="container">
        @foreach (Pokemon pokemon in pokemons)
        {
            var icon = Context.GetLink($"/assets/img/icons/{pokemon.Number.PadLeft(pokemon.Number.EndsWith('a') || pokemon.Number.EndsWith('g') ? 5 : 4, '0')}.png");
            if (catchedPokemon.Contains($"{pokemon?.Number ?? string.Empty}"))
            {
                var post = Context.Outputs.FromPipeline(nameof(Posts)).OrderBy(x => x.Get(CustomKeys.Date).ToString()).First(x => x.Get(CustomKeys.Number).ToString() == pokemon.Number);
                <a title="@pokemon.Name" href="@Context.GetLink("/")@post[CustomKeys.WritePath]">
                    <img class="pokemon-icon" src="@icon">
                </a>
            }
            else
            {
                <img class="pokemon-icon not-catched" src="@icon" title="@pokemon.Name">
            }
        }
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function randomizeNextTarget()
        {
            @{
                var uncaught = Pokemon.GetAll().Where(x => !Context.Outputs.FromPipeline(nameof(Posts)).Select(y => y[CustomKeys.Number]).Contains(x.Number));
            }

            var unchaughtNumbers = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Number}\"")))];
            var unchaughtNames = [@Html.Raw(string.Join(",", uncaught.Select(x => $"\"{x.Name}\"")))];
            var randomIndex = Math.floor(Math.random() * unchaughtNumbers.length);
            $("#nextTarget").html(unchaughtNumbers[randomIndex] + ' - ' + unchaughtNames[randomIndex]);
        }

        $(document).ready(function () {
            randomizeNextTarget();
        });
    </script>
}
