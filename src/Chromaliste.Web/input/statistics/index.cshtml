---
Title: Statistiques
---

@{
    var nbDocs = Context.GetPosts().Count();
}

<h2>Méthode</h2>

<dl>
    @{
        var categories = Context.GetPosts()
            .GroupBy(x => x.Category)
            .OrderByDescending(x => x.Count())
            .ThenBy(x => x.Key.GetDescription())
            .Select(x => (key: x.Key, count: x.Count()));
        foreach (var category in categories)
        {
            var percent = category.count * 1000 / nbDocs;
            var countString = $"({category.count})".PadLeft(4, ' ');
            <dd class="percentage percentage-@percent"><span class="text">@category.key.GetDescription() @countString</span></dd>
        }
    }
</dl>

<h2>Version</h2>

<dl>
    @{
        var versions = Context.GetPosts()
            .GroupBy(x => x.Version)
            .OrderByDescending(x => x.Count())
            .ThenBy(x => x.Key.GetDescription())
            .Select(x => (key: x.Key, count: x.Count()));
        foreach (var version in versions)
        {
            var percent = version.count * 1000 / nbDocs;
            var countString = $"({version.count})".PadLeft(4, ' ');
            <dd class="percentage percentage-@percent"><span class="text">@version.key.GetDescription() @countString</span></dd>
        }
    }
</dl>

<h2>Année</h2>

<dl>
    @{
        var years = Context.GetPosts()
            .GroupBy(x => x.CatchDate.Year)
            .OrderByDescending(x => x.Count())
            .Select(x => (key: x.Key, count: x.Count()));
        foreach (var year in years)
        {
            var percent = year.count * 1000 / nbDocs;
            var countString = $"({year.count})".PadLeft(4, ' ');
            <dd class="percentage percentage-@percent"><span class="text">@year.key @countString</span></dd>
        }
    }
</dl>

<h2>Meilleurs mois</h2>

<dl>
    @{
        var months = Context.GetPosts()
            .GroupBy(x => x.CatchDate.ToString("MMMM yyyy"))
            .OrderByDescending(x => x.Count())
            .Select(x => (key: x.Key, count: x.Count()));
        foreach (var month in months.Take(5))
        {
            var percent = month.count * 10;
            var countString = $"({month.count})".PadLeft(4, ' ');
            <dd class="percentage percentage-@percent"><span class="text">@month.key @countString</span></dd>
        }
    }
</dl>

<h2>Ball</h2>

<dl>
    @{
        var balls = Context.GetPosts()
            .GroupBy(x => x.Ball)
            .OrderByDescending(x => x.Count())
            .Select(x => (key: x.Key, count: x.Count()));
        foreach (var ball in balls)
        {
            var percent = ball.count * 1000 / nbDocs;
            var countString = $"({ball.count})".PadLeft(4, ' ');
            var ballImage = Context.GetLink($"/assets/img/balls/{ball.key.ToString().ToLowerInvariant()}.png");
            <dd class="percentage percentage-@percent">
                <span class="text">
                    <img class="ball-icon" src="@ballImage" alt="@ball.key.GetDescription()" title="@ball.key.GetDescription()" /> @countString
                </span>
            </dd>
        }
    }
</dl>
